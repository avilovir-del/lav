// =====================
// üåü –ù–ê–í–ò–ì–ê–¶–ò–Ø
// =====================
function showScreen(name) {
  document.querySelectorAll('.screen').forEach(screen => {
    screen.classList.remove('active');
  });

  const screen = document.getElementById(`screen-${name}`);
  if (screen) screen.classList.add('active');
}

document.addEventListener('DOMContentLoaded', () => {
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è —á–µ—Ä–µ–∑ JS
  const navButtons = document.querySelectorAll('.nav button');
  navButtons.forEach(button => {
    button.addEventListener('click', () => {
      const target = button.dataset.target;
      showScreen(target);

      // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
      navButtons.forEach(b => b.classList.remove('active'));
      button.classList.add('active');
    });
  });

  // –ü–æ–∫–∞–∑ –ø–µ—Ä–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  showScreen('character');
  if (navButtons[0]) navButtons[0].classList.add('active');

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  loadCharacter();
  updateLavki();
  initializeTasks();
  renderTasks();
  loadCharacterName();
});

// =====================
// üíé –õ–ê–í–ö–ò
// =====================
let lavki = parseInt(localStorage.getItem('lavki')) || 0;

function updateLavki() {
  const lavkiAmount = document.getElementById('lavki-amount');
  if (lavkiAmount) {
    lavkiAmount.textContent = lavki;
  }
  localStorage.setItem('lavki', lavki);
}

// =====================
// üõçÔ∏è –ú–ê–ì–ê–ó–ò–ù
// =====================
function buyItem(item, cost) {
  if (lavki >= cost) {
    lavki -= cost;
    updateLavki();
    alert(`–í—ã –∫—É–ø–∏–ª–∏ ${item} –∑–∞ ${cost} –ª–∞–≤–æ–∫!`);
  } else {
    alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∞–≤–æ–∫ üíé');
  }
}

// =====================
// ‚öôÔ∏è –°–ò–°–¢–ï–ú–ê –ù–ê–°–¢–†–û–ï–ö
// =====================

function saveSettings() {
  const nameInput = document.getElementById('char-name');
  const name = nameInput ? nameInput.value.trim() : '';
  
  if (!name) {
    alert('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞');
    nameInput.focus();
    return;
  }
  
  if (name.length < 2) {
    alert('‚ö†Ô∏è –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã 2 —Å–∏–º–≤–æ–ª–∞');
    return;
  }
  
  localStorage.setItem('charName', name);
  updateCharacterDisplay();
  showSuccessMessage('–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! üéâ');
}

function updateCharacterDisplay() {
  const name = localStorage.getItem('charName') || '–õ–∞–≤—á–∏–∫';
  const nameDisplay = document.getElementById('character-name-display');
  const statusDisplay = document.getElementById('character-status');
  
  if (nameDisplay) {
    nameDisplay.textContent = name;
  }
  
  if (statusDisplay) {
    // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–º–µ–Ω–∏
    const statuses = [
      '–°—á–∞—Å—Ç–ª–∏–≤ –∏ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! üòÑ',
      '–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å! ‚ú®',
      '–ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–∞–¥–∞–Ω–∏—è–º! üöÄ',
      '–ù–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–∑–∏—Ç–∏–≤–Ω–æ! üåü'
    ];
    const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];
    statusDisplay.textContent = randomStatus;
  }
}

function loadCharacterName() {
  const savedName = localStorage.getItem('charName');
  const nameInput = document.getElementById('char-name');
  
  if (savedName && nameInput) {
    nameInput.value = savedName;
  }
  updateCharacterDisplay();
}

function initializeCharacterSelector() {
  const selector = document.getElementById('character-selector');
  const currentCharacter = localStorage.getItem('characterImg') || 'images/1.jfif';
  
  if (selector) {
    // –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –≤—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    const options = selector.querySelectorAll('.character-option');
    options.forEach(option => {
      const imgPath = option.getAttribute('data-img');
      option.addEventListener('click', () => changeCharacter(imgPath));
      
      // –û—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
      if (imgPath === currentCharacter) {
        option.classList.add('selected');
      }
    });
  }
}

function changeCharacter(imgPath) {
  const img = document.getElementById('character-img');
  if (img) {
    img.src = imgPath;
    localStorage.setItem('characterImg', imgPath);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ
    const options = document.querySelectorAll('.character-option');
    options.forEach(option => {
      option.classList.remove('selected');
      if (option.getAttribute('data-img') === imgPath) {
        option.classList.add('selected');
      }
    });
    
    showSuccessMessage('–í–Ω–µ—à–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑–º–µ–Ω–µ–Ω–∞! üëó');
  }
}

function loadCharacter() {
  const savedImg = localStorage.getItem('characterImg');
  const characterImg = document.getElementById('character-img');
  if (savedImg && characterImg) {
    characterImg.src = savedImg;
  }
}

function updateStats() {
  const totalLavki = document.getElementById('total-lavki');
  const completedTasks = document.getElementById('completed-tasks');
  
  if (totalLavki) {
    totalLavki.textContent = lavki;
  }
  
  if (completedTasks) {
    const completedCount = tasks.filter(task => task.completed).length;
    completedTasks.textContent = `${completedCount} –∏–∑ ${tasks.length}`;
  }
}

function showSuccessMessage(message) {
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π —Ç–æ—Å—Ç
  const toast = document.createElement('div');
  toast.textContent = message;
  toast.style.cssText = `
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: #4caf50;
    color: white;
    padding: 12px 20px;
    border-radius: 25px;
    font-weight: 600;
    z-index: 1000;
    animation: slideIn 0.3s ease;
    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
  `;
  
  document.body.appendChild(toast);
  
  setTimeout(() => {
    toast.style.animation = 'slideIn 0.3s ease reverse';
    setTimeout(() => {
      document.body.removeChild(toast);
    }, 300);
  }, 2000);
}

// –û–±–Ω–æ–≤–∏—Ç–µ DOMContentLoaded - –¥–æ–±–∞–≤—å—Ç–µ:
document.addEventListener('DOMContentLoaded', () => {
  // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ ...
  
  // –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏:
  loadCharacterName();
  initializeCharacterSelector();
  updateStats();
});

// –û–±–Ω–æ–≤–∏—Ç–µ renderTasks —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:
function renderTasks() {
  // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ renderTasks ...
  updateStats(); // –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω–µ—Ü
}
// =====================
// üìã –°–ò–°–¢–ï–ú–ê –ó–ê–î–ê–ù–ò–ô
// =====================

// –ë–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ ID
const defaultTasks = [
  { id: 1, name: "–ü–æ–∫–æ—Ä–º–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", reward: 5, completed: false, userPhoto: null },
  { id: 2, name: "–ü–æ–∏–≥—Ä–∞—Ç—å —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º", reward: 10, completed: false, userPhoto: null },
  { id: 3, name: "–î–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂—É –ø–æ—Å–ø–∞—Ç—å", reward: 8, completed: false, userPhoto: null },
];

let tasks = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞–Ω–∏–π
function initializeTasks() {
  const savedTasks = localStorage.getItem('tasks');
  
  if (savedTasks) {
    try {
      const parsedTasks = JSON.parse(savedTasks);
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—Ç—Ä—É–∫—Ç—É—Ä—É defaultTasks
      tasks = defaultTasks.map(defaultTask => {
        const savedTask = parsedTasks.find(t => t.id === defaultTask.id);
        if (savedTask) {
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (—Å —Ñ–æ—Ç–æ –∏ —Å—Ç–∞—Ç—É—Å–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
          return savedTask;
        }
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        return { ...defaultTask };
      });
      
      console.log('–ó–∞–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage:', tasks);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞–Ω–∏–π:', e);
      tasks = [...defaultTasks];
    }
  } else {
    // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–¥–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    tasks = [...defaultTasks];
    saveTasksToStorage();
    console.log('–°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è:', tasks);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π
function saveTasksToStorage() {
  try {
    localStorage.setItem('tasks', JSON.stringify(tasks));
    console.log('–ó–∞–¥–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', tasks);
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π:', e);
  }
}

// =====================
// –†–ï–ù–î–ï–† –ó–ê–î–ê–ù–ò–ô
// =====================
function renderTasks() {
  const list = document.getElementById('task-list');
  if (!list) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç task-list –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  list.innerHTML = '';

  tasks.forEach((task, i) => {
    const li = document.createElement('li');
    li.className = 'task-item';
    
    if (task.completed) {
      li.style.background = '#f8fff8';
      li.style.borderLeft = '4px solid #4caf50';
    }

    const divName = document.createElement('div');
    divName.style.fontWeight = 'bold';
    divName.style.marginBottom = '10px';
    divName.innerHTML = task.completed ? 
      `‚úÖ <s>${task.name}</s>` : 
      `üìù ${task.name}`;
    li.appendChild(divName);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
    if (task.completed && task.userPhoto) {
      const userImgContainer = document.createElement('div');
      userImgContainer.style.marginTop = '10px';
      
      const userLabel = document.createElement('div');
      userLabel.textContent = 'üì∏ –í–∞—à–µ —Ñ–æ—Ç–æ:';
      userLabel.style.fontWeight = 'bold';
      userLabel.style.marginBottom = '5px';
      userLabel.style.color = '#2e7d32';
      userImgContainer.appendChild(userLabel);
      
      const userImg = document.createElement('img');
      userImg.src = task.userPhoto;
      userImg.alt = "–í–∞—à–µ —Ñ–æ—Ç–æ";
      userImg.style.width = '100%';
      userImg.style.maxHeight = '200px';
      userImg.style.borderRadius = '8px';
      userImg.style.border = '2px solid #4caf50';
      userImg.style.objectFit = 'cover';
      userImg.style.boxShadow = '0 2px 8px rgba(76, 175, 80, 0.3)';
      userImgContainer.appendChild(userImg);
      
      li.appendChild(userImgContainer);
    }

    const btnContainer = document.createElement('div');
    btnContainer.className = 'task-buttons';

    if (!task.completed) {
      // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
      const fileInput = document.createElement('input');
      fileInput.type = 'file';
      fileInput.accept = 'image/*';
      fileInput.capture = 'environment';
      fileInput.style.display = 'none';
      fileInput.id = `file-input-${i}`;
      
      fileInput.addEventListener('change', function(e) {
        handleImageUpload(e, task.id);
      });

      const uploadBtn = document.createElement('button');
      uploadBtn.className = 'complete';
      uploadBtn.textContent = `–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ (+${task.reward} –ª–∞–≤–æ–∫)`;
      uploadBtn.onclick = () => {
        console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è:', task.id);
        fileInput.click();
      };

      btnContainer.appendChild(fileInput);
      btnContainer.appendChild(uploadBtn);
    } else {
      const completedText = document.createElement('span');
      completedText.textContent = '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ';
      completedText.style.color = '#4caf50';
      completedText.style.fontWeight = 'bold';
      btnContainer.appendChild(completedText);
    }

    li.appendChild(btnContainer);
    list.appendChild(li);
  });
  
  console.log('–ó–∞–¥–∞–Ω–∏—è –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω—ã:', tasks);
}

// =====================
// –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ì–†–£–ó–ö–ò –§–û–¢–û
// =====================
function handleImageUpload(event, taskId) {
  console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è ID:', taskId);
  const file = event.target.files[0];
  if (!file) {
    console.log('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
  if (!file.type.match('image.*')) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
  if (file.size > 5 * 1024 * 1024) {
    alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB');
    return;
  }

  const reader = new FileReader();
  
  reader.onload = function(e) {
    const imageDataUrl = e.target.result;
    console.log('–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –¥–∞–Ω–Ω—ã–µ URL –ø–æ–ª—É—á–µ–Ω—ã');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ
    completeTaskWithPhoto(taskId, imageDataUrl);
  };
  
  reader.onerror = function() {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞');
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞');
  };
  
  reader.readAsDataURL(file);
}

// =====================
// –í–´–ü–û–õ–ù–ï–ù–ò–ï –ó–ê–î–ê–ù–ò–Ø –° –§–û–¢–û
// =====================
function completeTaskWithPhoto(taskId, photoDataUrl) {
  console.log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è ID:', taskId, '—Å —Ñ–æ—Ç–æ');
  
  const taskIndex = tasks.findIndex(t => t.id === taskId);
  
  if (taskIndex === -1) {
    console.error('–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ID:', taskId);
    return;
  }
  
  const task = tasks[taskIndex];
  if (task.completed) {
    console.log('–ó–∞–¥–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
    alert('–≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');
    return;
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  task.userPhoto = photoDataUrl;
  task.completed = true;
  lavki += task.reward;
  updateLavki();

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
  saveTasksToStorage();

  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è
  renderTasks();
  animateCharacterReward();
  
  alert(`–ó–∞–¥–∞–Ω–∏–µ "${task.name}" –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ ${task.reward} –ª–∞–≤–æ–∫ üíé`);
  console.log('–ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', tasks);
}

// =====================
// –ê–ù–ò–ú–ê–¶–ò–Ø –ü–ï–†–°–û–ù–ê–ñ–ê
// =====================
function animateCharacterReward() {
  const img = document.getElementById('character-img');
  if (img) {
    img.classList.add('bounce');
    setTimeout(() => img.classList.remove('bounce'), 1000);
  }
}

// =====================
// –î–ï–ë–ê–ì –§–£–ù–ö–¶–ò–ò
// =====================
function debugTasks() {
  console.log('–¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞–Ω–∏—è:', tasks);
  console.log('LocalStorage tasks:', localStorage.getItem('tasks'));
}

// –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
window.debugTasks = debugTasks;

// =====================
// üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø
// =====================

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π
function initializeDisplayValues() {
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è
  updateLavki();
  updateCharacterDisplay();
  updateStats();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è
  const foodElement = document.getElementById('food');
  const energyElement = document.getElementById('energy');
  const funElement = document.getElementById('fun');
  
  if (foodElement && !foodElement.textContent) foodElement.textContent = '80';
  if (energyElement && !energyElement.textContent) energyElement.textContent = '60';
  if (funElement && !funElement.textContent) funElement.textContent = '40';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–º–µ–Ω–∏
function loadCharacterName() {
  const savedName = localStorage.getItem('charName');
  const nameInput = document.getElementById('char-name');
  
  if (savedName && nameInput) {
    nameInput.value = savedName;
  } else {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    nameInput.value = '–õ–∞–≤—á–∏–∫';
  }
  updateCharacterDisplay();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats() {
  const totalLavki = document.getElementById('total-lavki');
  const completedTasks = document.getElementById('completed-tasks');
  const creationDate = document.getElementById('creation-date');
  
  if (totalLavki) {
    totalLavki.textContent = lavki;
  }
  
  if (completedTasks) {
    const completedCount = tasks.filter(task => task.completed).length;
    completedTasks.textContent = `${completedCount} –∏–∑ ${tasks.length}`;
  }
  
  if (creationDate) {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é
    let creation = localStorage.getItem('creationDate');
    if (!creation) {
      creation = new Date().toLocaleDateString('ru-RU');
      localStorage.setItem('creationDate', creation);
    }
    creationDate.textContent = creation;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function checkImages() {
  const images = document.querySelectorAll('img');
  images.forEach(img => {
    img.onerror = function() {
      console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', this.src);
      // –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å placeholder
      this.src = 'https://via.placeholder.com/200x200/ECF0F1/666?text=üéÆ';
    };
  });
}

// –û–±–Ω–æ–≤–∏—Ç–µ DOMContentLoaded
document.addEventListener('DOMContentLoaded', () => {
  // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ...
  
  // –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –≤—ã–∑–æ–≤—ã:
  loadCharacterName();
  initializeCharacterSelector();
  initializeDisplayValues();
  checkImages();
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç
  setTimeout(() => {
    updateLavki();
    updateCharacterDisplay();
    updateStats();
  }, 100);
});

// –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–æ–≤
function showScreen(name) {
  document.querySelectorAll('.screen').forEach(screen => {
    screen.classList.remove('active');
  });

  const screen = document.getElementById(`screen-${name}`);
  if (screen) {
    screen.classList.add('active');
    // –ü—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —ç–∫—Ä–∞–Ω–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    setTimeout(() => {
      updateStats();
      if (name === 'character') {
        updateCharacterDisplay();
      }
    }, 50);
  }
}

// –î–æ–±–∞–≤—å—Ç–µ –≤ app.js —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
function liftCharacterImage() {
  const characterScreen = document.getElementById('screen-character');
  const characterImg = document.getElementById('character-img');
  const characterHeader = document.querySelector('.character-header');
  
  if (characterScreen && characterImg && characterHeader) {
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –∏–º–µ–Ω–µ–º –∏ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    characterHeader.style.marginBottom = '0px';
    characterHeader.style.paddingBottom = '0px';
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    const screenHeight = window.innerHeight;
    const navHeight = 60;
    const headerHeight = characterHeader.offsetHeight;
    const needsHeight = characterScreen.querySelector('.needs-overlay').offsetHeight;
    
    // –í—ã—á–∏—Å–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º)
    const availableHeight = screenHeight - navHeight - headerHeight - needsHeight - 10;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    characterImg.style.maxHeight = `${Math.max(250, availableHeight)}px`;
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–±–∏—Ä–∞–µ–º –ª—é–±—ã–µ –æ—Ç—Å—Ç—É–ø—ã
    characterScreen.style.gap = '0';
    characterScreen.style.rowGap = '0';
  }
}

// –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
document.addEventListener('DOMContentLoaded', function() {
  setTimeout(liftCharacterImage, 100);
  window.addEventListener('resize', liftCharacterImage);
});

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é showScreen
function showScreen(name) {
  document.querySelectorAll('.screen').forEach(screen => {
    screen.classList.remove('active');
  });

  const screen = document.getElementById(`screen-${name}`);
  if (screen) {
    screen.classList.add('active');
    
    if (name === 'character') {
      setTimeout(liftCharacterImage, 50);
    }
    
    setTimeout(() => {
      updateStats();
      if (name === 'character') {
        updateCharacterDisplay();
      }
    }, 50);
  }
}
